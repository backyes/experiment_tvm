torch.Size([4, 2, 30])
torch.Size([4, 2, 512])
graph(%self.1 : __torch__.Model,
      %seq : Long(4, 10, strides=[10, 1], requires_grad=0, device=cpu)):
  %fc : __torch__.torch.nn.modules.linear.___torch_mangle_12.Linear = prim::GetAttr[name="fc"](%self.1)
  %mogrifier_lstm_layer2 : __torch__.mog_lstm.___torch_mangle_11.MogrifierLSTMCell = prim::GetAttr[name="mogrifier_lstm_layer2"](%self.1)
  %mogrifier_lstm_layer1 : __torch__.mog_lstm.MogrifierLSTMCell = prim::GetAttr[name="mogrifier_lstm_layer1"](%self.1)
  %drop : __torch__.torch.nn.modules.dropout.Dropout = prim::GetAttr[name="drop"](%self.1)
  %embedding : __torch__.torch.nn.modules.sparse.Embedding = prim::GetAttr[name="embedding"](%self.1)
  %embedding.1 : __torch__.torch.nn.modules.sparse.Embedding = prim::GetAttr[name="embedding"](%self.1)
  %weight.3 : Tensor = prim::GetAttr[name="weight"](%embedding.1)
  %569 : Tensor = prim::CallMethod[name="forward"](%embedding, %seq)
  %100 : int = prim::Constant[value=0]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:22:0
  %101 : int = aten::size(%seq, %100) # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:22:0
  %batch_size : Long(device=cpu) = prim::NumToTensor(%101)
  %130 : int = aten::Int(%batch_size)
  %122 : int = aten::Int(%batch_size)
  %114 : int = aten::Int(%batch_size)
  %106 : int = aten::Int(%batch_size)
  %107 : int = prim::Constant[value=512]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:23:0
  %108 : int[] = prim::ListConstruct(%106, %107)
  %109 : int = prim::Constant[value=6]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:23:0
  %110 : NoneType = prim::Constant()
  %111 : Device = prim::Constant[value="cpu"]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:23:0
  %112 : bool = prim::Constant[value=0]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:23:0
  %input.3 : Float(4, 512, strides=[512, 1], requires_grad=0, device=cpu) = aten::zeros(%108, %109, %110, %111, %112) # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:23:0
  %115 : int = prim::Constant[value=512]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:23:0
  %116 : int[] = prim::ListConstruct(%114, %115)
  %117 : int = prim::Constant[value=6]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:23:0
  %118 : NoneType = prim::Constant()
  %119 : Device = prim::Constant[value="cpu"]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:23:0
  %120 : bool = prim::Constant[value=0]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:23:0
  %121 : Float(4, 512, strides=[512, 1], requires_grad=0, device=cpu) = aten::zeros(%116, %117, %118, %119, %120) # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:23:0
  %123 : int = prim::Constant[value=512]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:24:0
  %124 : int[] = prim::ListConstruct(%122, %123)
  %125 : int = prim::Constant[value=6]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:24:0
  %126 : NoneType = prim::Constant()
  %127 : Device = prim::Constant[value="cpu"]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:24:0
  %128 : bool = prim::Constant[value=0]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:24:0
  %input.15 : Float(4, 512, strides=[512, 1], requires_grad=0, device=cpu) = aten::zeros(%124, %125, %126, %127, %128) # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:24:0
  %131 : int = prim::Constant[value=512]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:24:0
  %132 : int[] = prim::ListConstruct(%130, %131)
  %133 : int = prim::Constant[value=6]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:24:0
  %134 : NoneType = prim::Constant()
  %135 : Device = prim::Constant[value="cpu"]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:24:0
  %136 : bool = prim::Constant[value=0]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:24:0
  %137 : Float(4, 512, strides=[512, 1], requires_grad=0, device=cpu) = aten::zeros(%132, %133, %134, %135, %136) # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:24:0
  %138 : int = prim::Constant[value=0]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:28:0
  %139 : int = prim::Constant[value=0]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:28:0
  %140 : int = prim::Constant[value=9223372036854775807]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:28:0
  %141 : int = prim::Constant[value=1]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:28:0
  %142 : Float(4, 10, 512, strides=[5120, 512, 1], requires_grad=0, device=cpu) = aten::slice(%569, %138, %139, %140, %141) # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:28:0
  %143 : int = prim::Constant[value=1]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:28:0
  %144 : int = prim::Constant[value=0]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:28:0
  %input.1 : Float(4, 512, strides=[5120, 1], requires_grad=0, device=cpu) = aten::select(%142, %143, %144) # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:28:0
  %570 : Tensor = prim::CallMethod[name="forward"](%drop, %input.1)
  %571 : (Tensor, Tensor) = prim::CallMethod[name="forward"](%mogrifier_lstm_layer1, %input.3, %570, %121)
  %559 : Float(4, 512, strides=[512, 1], requires_grad=0, device=cpu), %560 : Float(4, 512, strides=[512, 1], requires_grad=0, device=cpu) = prim::TupleUnpack(%571)
  %572 : (Tensor, Tensor) = prim::CallMethod[name="forward"](%mogrifier_lstm_layer2, %input.15, %559, %137)
  %567 : Float(4, 512, strides=[512, 1], requires_grad=0, device=cpu), %568 : Float(4, 512, strides=[512, 1], requires_grad=0, device=cpu) = prim::TupleUnpack(%572)
  %573 : Tensor = prim::CallMethod[name="forward1"](%drop, %567)
  %574 : Tensor = prim::CallMethod[name="forward"](%fc, %weight.3, %573)
  %245 : int = prim::Constant[value=1]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:32:0
  %246 : Float(4, 1, 512, strides=[512, 512, 1], requires_grad=0, device=cpu) = aten::unsqueeze(%573, %245) # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:32:0
  %247 : int = prim::Constant[value=1]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:33:0
  %248 : Float(4, 1, 30, strides=[30, 30, 1], requires_grad=0, device=cpu) = aten::unsqueeze(%574, %247) # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:33:0
  %249 : int = prim::Constant[value=0]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:28:0
  %250 : int = prim::Constant[value=0]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:28:0
  %251 : int = prim::Constant[value=9223372036854775807]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:28:0
  %252 : int = prim::Constant[value=1]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:28:0
  %253 : Float(4, 10, 512, strides=[5120, 512, 1], requires_grad=0, device=cpu) = aten::slice(%569, %249, %250, %251, %252) # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:28:0
  %254 : int = prim::Constant[value=1]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:28:0
  %255 : int = prim::Constant[value=1]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:28:0
  %input.31 : Float(4, 512, strides=[5120, 1], requires_grad=0, device=cpu) = aten::select(%253, %254, %255) # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:28:0
  %575 : Tensor = prim::CallMethod[name="forward2"](%drop, %input.31)
  %576 : Tensor = prim::CallMethod[name="forward1"](%mogrifier_lstm_layer1, %559, %575, %560)
  %577 : Tensor = prim::CallMethod[name="forward1"](%mogrifier_lstm_layer2, %573, %576, %568)
  %578 : Tensor = prim::CallMethod[name="forward3"](%drop, %577)
  %579 : Tensor = prim::CallMethod[name="forward1"](%fc, %weight.3, %578)
  %356 : int = prim::Constant[value=1]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:32:0
  %357 : Float(4, 1, 512, strides=[512, 512, 1], requires_grad=0, device=cpu) = aten::unsqueeze(%578, %356) # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:32:0
  %358 : int = prim::Constant[value=1]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:33:0
  %359 : Float(4, 1, 30, strides=[30, 30, 1], requires_grad=0, device=cpu) = aten::unsqueeze(%579, %358) # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:33:0
  %360 : Tensor[] = prim::ListConstruct(%246, %357)
  %361 : int = prim::Constant[value=1]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:36:0
  %362 : Float(4, 2, 512, strides=[1024, 512, 1], requires_grad=0, device=cpu) = aten::cat(%360, %361) # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:36:0
  %363 : Tensor[] = prim::ListConstruct(%248, %359)
  %364 : int = prim::Constant[value=1]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:37:0
  %365 : Float(4, 2, 30, strides=[60, 30, 1], requires_grad=0, device=cpu) = aten::cat(%363, %364) # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:37:0
  %366 : (Float(4, 2, 30, strides=[60, 30, 1], requires_grad=0, device=cpu), Float(4, 2, 512, strides=[1024, 512, 1], requires_grad=0, device=cpu)) = prim::TupleConstruct(%365, %362)
  return (%366)

