torch.Size([4, 5, 30])
torch.Size([4, 5, 512])
graph(%self.1 : __torch__.Model,
      %seq : Long(4, 10, strides=[10, 1], requires_grad=0, device=cpu)):
  %fc : __torch__.torch.nn.modules.linear.___torch_mangle_12.Linear = prim::GetAttr[name="fc"](%self.1)
  %mogrifier_lstm_layer2 : __torch__.mog_lstm.___torch_mangle_11.MogrifierLSTMCell = prim::GetAttr[name="mogrifier_lstm_layer2"](%self.1)
  %mogrifier_lstm_layer1 : __torch__.mog_lstm.MogrifierLSTMCell = prim::GetAttr[name="mogrifier_lstm_layer1"](%self.1)
  %drop : __torch__.torch.nn.modules.dropout.Dropout = prim::GetAttr[name="drop"](%self.1)
  %embedding : __torch__.torch.nn.modules.sparse.Embedding = prim::GetAttr[name="embedding"](%self.1)
  %embedding.1 : __torch__.torch.nn.modules.sparse.Embedding = prim::GetAttr[name="embedding"](%self.1)
  %weight.3 : Tensor = prim::GetAttr[name="weight"](%embedding.1)
  %1220 : Tensor = prim::CallMethod[name="forward"](%embedding, %seq)
  %100 : int = prim::Constant[value=0]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:22:0
  %101 : int = aten::size(%seq, %100) # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:22:0
  %batch_size : Long(device=cpu) = prim::NumToTensor(%101)
  %130 : int = aten::Int(%batch_size)
  %122 : int = aten::Int(%batch_size)
  %114 : int = aten::Int(%batch_size)
  %106 : int = aten::Int(%batch_size)
  %107 : int = prim::Constant[value=512]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:23:0
  %108 : int[] = prim::ListConstruct(%106, %107)
  %109 : int = prim::Constant[value=6]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:23:0
  %110 : NoneType = prim::Constant()
  %111 : Device = prim::Constant[value="cpu"]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:23:0
  %112 : bool = prim::Constant[value=0]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:23:0
  %input.3 : Float(4, 512, strides=[512, 1], requires_grad=0, device=cpu) = aten::zeros(%108, %109, %110, %111, %112) # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:23:0
  %115 : int = prim::Constant[value=512]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:23:0
  %116 : int[] = prim::ListConstruct(%114, %115)
  %117 : int = prim::Constant[value=6]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:23:0
  %118 : NoneType = prim::Constant()
  %119 : Device = prim::Constant[value="cpu"]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:23:0
  %120 : bool = prim::Constant[value=0]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:23:0
  %121 : Float(4, 512, strides=[512, 1], requires_grad=0, device=cpu) = aten::zeros(%116, %117, %118, %119, %120) # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:23:0
  %123 : int = prim::Constant[value=512]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:24:0
  %124 : int[] = prim::ListConstruct(%122, %123)
  %125 : int = prim::Constant[value=6]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:24:0
  %126 : NoneType = prim::Constant()
  %127 : Device = prim::Constant[value="cpu"]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:24:0
  %128 : bool = prim::Constant[value=0]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:24:0
  %input.15 : Float(4, 512, strides=[512, 1], requires_grad=0, device=cpu) = aten::zeros(%124, %125, %126, %127, %128) # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:24:0
  %131 : int = prim::Constant[value=512]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:24:0
  %132 : int[] = prim::ListConstruct(%130, %131)
  %133 : int = prim::Constant[value=6]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:24:0
  %134 : NoneType = prim::Constant()
  %135 : Device = prim::Constant[value="cpu"]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:24:0
  %136 : bool = prim::Constant[value=0]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:24:0
  %137 : Float(4, 512, strides=[512, 1], requires_grad=0, device=cpu) = aten::zeros(%132, %133, %134, %135, %136) # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:24:0
  %138 : int = prim::Constant[value=0]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:28:0
  %139 : int = prim::Constant[value=0]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:28:0
  %140 : int = prim::Constant[value=9223372036854775807]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:28:0
  %141 : int = prim::Constant[value=1]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:28:0
  %142 : Float(4, 10, 512, strides=[5120, 512, 1], requires_grad=0, device=cpu) = aten::slice(%1220, %138, %139, %140, %141) # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:28:0
  %143 : int = prim::Constant[value=1]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:28:0
  %144 : int = prim::Constant[value=0]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:28:0
  %input.1 : Float(4, 512, strides=[5120, 1], requires_grad=0, device=cpu) = aten::select(%142, %143, %144) # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:28:0
  %1221 : Tensor = prim::CallMethod[name="forward"](%drop, %input.1)
  %1222 : (Tensor, Tensor) = prim::CallMethod[name="forward"](%mogrifier_lstm_layer1, %input.3, %1221, %121)
  %1162 : Float(4, 512, strides=[512, 1], requires_grad=0, device=cpu), %1163 : Float(4, 512, strides=[512, 1], requires_grad=0, device=cpu) = prim::TupleUnpack(%1222)
  %1223 : (Tensor, Tensor) = prim::CallMethod[name="forward"](%mogrifier_lstm_layer2, %input.15, %1162, %137)
  %1170 : Float(4, 512, strides=[512, 1], requires_grad=0, device=cpu), %1171 : Float(4, 512, strides=[512, 1], requires_grad=0, device=cpu) = prim::TupleUnpack(%1223)
  %1224 : Tensor = prim::CallMethod[name="forward1"](%drop, %1170)
  %1225 : Tensor = prim::CallMethod[name="forward"](%fc, %weight.3, %1224)
  %245 : int = prim::Constant[value=1]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:32:0
  %246 : Float(4, 1, 512, strides=[512, 512, 1], requires_grad=0, device=cpu) = aten::unsqueeze(%1224, %245) # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:32:0
  %247 : int = prim::Constant[value=1]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:33:0
  %248 : Float(4, 1, 30, strides=[30, 30, 1], requires_grad=0, device=cpu) = aten::unsqueeze(%1225, %247) # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:33:0
  %249 : int = prim::Constant[value=0]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:28:0
  %250 : int = prim::Constant[value=0]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:28:0
  %251 : int = prim::Constant[value=9223372036854775807]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:28:0
  %252 : int = prim::Constant[value=1]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:28:0
  %253 : Float(4, 10, 512, strides=[5120, 512, 1], requires_grad=0, device=cpu) = aten::slice(%1220, %249, %250, %251, %252) # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:28:0
  %254 : int = prim::Constant[value=1]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:28:0
  %255 : int = prim::Constant[value=1]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:28:0
  %input.31 : Float(4, 512, strides=[5120, 1], requires_grad=0, device=cpu) = aten::select(%253, %254, %255) # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:28:0
  %1226 : Tensor = prim::CallMethod[name="forward2"](%drop, %input.31)
  %1227 : (Tensor, Tensor) = prim::CallMethod[name="forward1"](%mogrifier_lstm_layer1, %1162, %1226, %1163)
  %1178 : Float(4, 512, strides=[512, 1], requires_grad=0, device=cpu), %1179 : Float(4, 512, strides=[512, 1], requires_grad=0, device=cpu) = prim::TupleUnpack(%1227)
  %1228 : (Tensor, Tensor) = prim::CallMethod[name="forward1"](%mogrifier_lstm_layer2, %1224, %1178, %1171)
  %1186 : Float(4, 512, strides=[512, 1], requires_grad=0, device=cpu), %1187 : Float(4, 512, strides=[512, 1], requires_grad=0, device=cpu) = prim::TupleUnpack(%1228)
  %1229 : Tensor = prim::CallMethod[name="forward3"](%drop, %1186)
  %1230 : Tensor = prim::CallMethod[name="forward1"](%fc, %weight.3, %1229)
  %356 : int = prim::Constant[value=1]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:32:0
  %357 : Float(4, 1, 512, strides=[512, 512, 1], requires_grad=0, device=cpu) = aten::unsqueeze(%1229, %356) # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:32:0
  %358 : int = prim::Constant[value=1]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:33:0
  %359 : Float(4, 1, 30, strides=[30, 30, 1], requires_grad=0, device=cpu) = aten::unsqueeze(%1230, %358) # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:33:0
  %360 : int = prim::Constant[value=0]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:28:0
  %361 : int = prim::Constant[value=0]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:28:0
  %362 : int = prim::Constant[value=9223372036854775807]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:28:0
  %363 : int = prim::Constant[value=1]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:28:0
  %364 : Float(4, 10, 512, strides=[5120, 512, 1], requires_grad=0, device=cpu) = aten::slice(%1220, %360, %361, %362, %363) # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:28:0
  %365 : int = prim::Constant[value=1]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:28:0
  %366 : int = prim::Constant[value=2]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:28:0
  %input.57 : Float(4, 512, strides=[5120, 1], requires_grad=0, device=cpu) = aten::select(%364, %365, %366) # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:28:0
  %1231 : Tensor = prim::CallMethod[name="forward4"](%drop, %input.57)
  %1232 : (Tensor, Tensor) = prim::CallMethod[name="forward2"](%mogrifier_lstm_layer1, %1178, %1231, %1179)
  %1194 : Float(4, 512, strides=[512, 1], requires_grad=0, device=cpu), %1195 : Float(4, 512, strides=[512, 1], requires_grad=0, device=cpu) = prim::TupleUnpack(%1232)
  %1233 : (Tensor, Tensor) = prim::CallMethod[name="forward2"](%mogrifier_lstm_layer2, %1229, %1194, %1187)
  %1202 : Float(4, 512, strides=[512, 1], requires_grad=0, device=cpu), %1203 : Float(4, 512, strides=[512, 1], requires_grad=0, device=cpu) = prim::TupleUnpack(%1233)
  %1234 : Tensor = prim::CallMethod[name="forward5"](%drop, %1202)
  %1235 : Tensor = prim::CallMethod[name="forward2"](%fc, %weight.3, %1234)
  %467 : int = prim::Constant[value=1]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:32:0
  %468 : Float(4, 1, 512, strides=[512, 512, 1], requires_grad=0, device=cpu) = aten::unsqueeze(%1234, %467) # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:32:0
  %469 : int = prim::Constant[value=1]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:33:0
  %470 : Float(4, 1, 30, strides=[30, 30, 1], requires_grad=0, device=cpu) = aten::unsqueeze(%1235, %469) # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:33:0
  %471 : int = prim::Constant[value=0]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:28:0
  %472 : int = prim::Constant[value=0]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:28:0
  %473 : int = prim::Constant[value=9223372036854775807]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:28:0
  %474 : int = prim::Constant[value=1]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:28:0
  %475 : Float(4, 10, 512, strides=[5120, 512, 1], requires_grad=0, device=cpu) = aten::slice(%1220, %471, %472, %473, %474) # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:28:0
  %476 : int = prim::Constant[value=1]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:28:0
  %477 : int = prim::Constant[value=3]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:28:0
  %input.83 : Float(4, 512, strides=[5120, 1], requires_grad=0, device=cpu) = aten::select(%475, %476, %477) # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:28:0
  %1236 : Tensor = prim::CallMethod[name="forward6"](%drop, %input.83)
  %1237 : (Tensor, Tensor) = prim::CallMethod[name="forward3"](%mogrifier_lstm_layer1, %1194, %1236, %1195)
  %1210 : Float(4, 512, strides=[512, 1], requires_grad=0, device=cpu), %1211 : Float(4, 512, strides=[512, 1], requires_grad=0, device=cpu) = prim::TupleUnpack(%1237)
  %1238 : (Tensor, Tensor) = prim::CallMethod[name="forward3"](%mogrifier_lstm_layer2, %1234, %1210, %1203)
  %1218 : Float(4, 512, strides=[512, 1], requires_grad=0, device=cpu), %1219 : Float(4, 512, strides=[512, 1], requires_grad=0, device=cpu) = prim::TupleUnpack(%1238)
  %1239 : Tensor = prim::CallMethod[name="forward7"](%drop, %1218)
  %1240 : Tensor = prim::CallMethod[name="forward3"](%fc, %weight.3, %1239)
  %578 : int = prim::Constant[value=1]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:32:0
  %579 : Float(4, 1, 512, strides=[512, 512, 1], requires_grad=0, device=cpu) = aten::unsqueeze(%1239, %578) # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:32:0
  %580 : int = prim::Constant[value=1]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:33:0
  %581 : Float(4, 1, 30, strides=[30, 30, 1], requires_grad=0, device=cpu) = aten::unsqueeze(%1240, %580) # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:33:0
  %582 : int = prim::Constant[value=0]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:28:0
  %583 : int = prim::Constant[value=0]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:28:0
  %584 : int = prim::Constant[value=9223372036854775807]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:28:0
  %585 : int = prim::Constant[value=1]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:28:0
  %586 : Float(4, 10, 512, strides=[5120, 512, 1], requires_grad=0, device=cpu) = aten::slice(%1220, %582, %583, %584, %585) # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:28:0
  %587 : int = prim::Constant[value=1]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:28:0
  %588 : int = prim::Constant[value=4]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:28:0
  %input.109 : Float(4, 512, strides=[5120, 1], requires_grad=0, device=cpu) = aten::select(%586, %587, %588) # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:28:0
  %1241 : Tensor = prim::CallMethod[name="forward8"](%drop, %input.109)
  %1242 : Tensor = prim::CallMethod[name="forward4"](%mogrifier_lstm_layer1, %1210, %1241, %1211)
  %1243 : Tensor = prim::CallMethod[name="forward4"](%mogrifier_lstm_layer2, %1239, %1242, %1219)
  %1244 : Tensor = prim::CallMethod[name="forward9"](%drop, %1243)
  %1245 : Tensor = prim::CallMethod[name="forward4"](%fc, %weight.3, %1244)
  %689 : int = prim::Constant[value=1]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:32:0
  %690 : Float(4, 1, 512, strides=[512, 512, 1], requires_grad=0, device=cpu) = aten::unsqueeze(%1244, %689) # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:32:0
  %691 : int = prim::Constant[value=1]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:33:0
  %692 : Float(4, 1, 30, strides=[30, 30, 1], requires_grad=0, device=cpu) = aten::unsqueeze(%1245, %691) # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:33:0
  %693 : Tensor[] = prim::ListConstruct(%246, %357, %468, %579, %690)
  %694 : int = prim::Constant[value=1]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:36:0
  %695 : Float(4, 5, 512, strides=[2560, 512, 1], requires_grad=0, device=cpu) = aten::cat(%693, %694) # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:36:0
  %696 : Tensor[] = prim::ListConstruct(%248, %359, %470, %581, %692)
  %697 : int = prim::Constant[value=1]() # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:37:0
  %698 : Float(4, 5, 30, strides=[150, 30, 1], requires_grad=0, device=cpu) = aten::cat(%696, %697) # /Users/shwangyanfei/work/experiment_tvm/torch/example.py:37:0
  %699 : (Float(4, 5, 30, strides=[150, 30, 1], requires_grad=0, device=cpu), Float(4, 5, 512, strides=[2560, 512, 1], requires_grad=0, device=cpu)) = prim::TupleConstruct(%698, %695)
  return (%699)

